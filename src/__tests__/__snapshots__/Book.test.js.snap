exports[`Testing Book Component check render when not exists props.book.authors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Book
    book={
        Object {
            "id": 1,
            "imageLinks": Object {
              "thumbnail": "url/book/one",
            },
            "shelf": "read",
            "title": "Book One",
          }
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="book">
        <div
                className="book-top">
                <div
                        className="book-cover"
                        style={
                                Object {
                                        "backgroundImage": "url(url/book/one)",
                                        "height": 193,
                                        "width": 128,
                                      }
                        } />
                <BookShelfChanger
                        book={
                                Object {
                                        "id": 1,
                                        "imageLinks": Object {
                                          "thumbnail": "url/book/one",
                                        },
                                        "shelf": "read",
                                        "title": "Book One",
                                      }
                        }
                        onUpdateBook={[Function]} />
        </div>
        <div
                className="book-title">
                Book One
        </div>
        <div
                className="book-authors" />
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top">
            <div
                        className="book-cover"
                        style={
                                    Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                        } />
            <BookShelfChanger
                        book={
                                    Object {
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                        }
                        onUpdateBook={[Function]} />
</div>,
          <div
            className="book-title">
            Book One
</div>,
          <div
            className="book-authors" />,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="book-cover"
                style={
                                Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                } />,
              <BookShelfChanger
                book={
                                Object {
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                }
                onUpdateBook={[Function]} />,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "book-cover",
                "style": Object {
                  "backgroundImage": "url(url/book/one)",
                  "height": 193,
                  "width": 128,
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "book": Object {
                  "id": 1,
                  "imageLinks": Object {
                    "thumbnail": "url/book/one",
                  },
                  "shelf": "read",
                  "title": "Book One",
                },
                "onUpdateBook": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book One",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "Book One",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "book-authors",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="book">
          <div
                    className="book-top">
                    <div
                              className="book-cover"
                              style={
                                        Object {
                                                  "backgroundImage": "url(url/book/one)",
                                                  "height": 193,
                                                  "width": 128,
                                                }
                              } />
                    <BookShelfChanger
                              book={
                                        Object {
                                                  "id": 1,
                                                  "imageLinks": Object {
                                                    "thumbnail": "url/book/one",
                                                  },
                                                  "shelf": "read",
                                                  "title": "Book One",
                                                }
                              }
                              onUpdateBook={[Function]} />
          </div>
          <div
                    className="book-title">
                    Book One
          </div>
          <div
                    className="book-authors" />
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-top">
              <div
                            className="book-cover"
                            style={
                                          Object {
                                                        "backgroundImage": "url(url/book/one)",
                                                        "height": 193,
                                                        "width": 128,
                                                      }
                            } />
              <BookShelfChanger
                            book={
                                          Object {
                                                        "id": 1,
                                                        "imageLinks": Object {
                                                          "thumbnail": "url/book/one",
                                                        },
                                                        "shelf": "read",
                                                        "title": "Book One",
                                                      }
                            }
                            onUpdateBook={[Function]} />
</div>,
            <div
              className="book-title">
              Book One
</div>,
            <div
              className="book-authors" />,
          ],
          "className": "book",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="book-cover"
                  style={
                                    Object {
                                                      "backgroundImage": "url(url/book/one)",
                                                      "height": 193,
                                                      "width": 128,
                                                    }
                  } />,
                <BookShelfChanger
                  book={
                                    Object {
                                                      "id": 1,
                                                      "imageLinks": Object {
                                                        "thumbnail": "url/book/one",
                                                      },
                                                      "shelf": "read",
                                                      "title": "Book One",
                                                    }
                  }
                  onUpdateBook={[Function]} />,
              ],
              "className": "book-top",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "book-cover",
                  "style": Object {
                    "backgroundImage": "url(url/book/one)",
                    "height": 193,
                    "width": 128,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "book": Object {
                    "id": 1,
                    "imageLinks": Object {
                      "thumbnail": "url/book/one",
                    },
                    "shelf": "read",
                    "title": "Book One",
                  },
                  "onUpdateBook": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book One",
              "className": "book-title",
            },
            "ref": null,
            "rendered": "Book One",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "book-authors",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Testing Book Component check render when not exists props.book.imageLinks 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Book
    book={
        Object {
            "authors": Array [
              "Author One",
            ],
            "id": 1,
            "shelf": "read",
            "title": "Book One",
          }
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="book">
        <div
                className="book-top">
                <BookShelfChanger
                        book={
                                Object {
                                        "authors": Array [
                                          "Author One",
                                        ],
                                        "id": 1,
                                        "shelf": "read",
                                        "title": "Book One",
                                      }
                        }
                        onUpdateBook={[Function]} />
        </div>
        <div
                className="book-title">
                Book One
        </div>
        <div
                className="book-authors">
                Author One
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top">
            <BookShelfChanger
                        book={
                                    Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                        }
                        onUpdateBook={[Function]} />
</div>,
          <div
            className="book-title">
            Book One
</div>,
          <div
            className="book-authors">
            Author One
</div>,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <BookShelfChanger
                book={
                                Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                }
                onUpdateBook={[Function]} />,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "book": Object {
                  "authors": Array [
                    "Author One",
                  ],
                  "id": 1,
                  "shelf": "read",
                  "title": "Book One",
                },
                "onUpdateBook": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book One",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "Book One",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Author One",
            ],
            "className": "book-authors",
          },
          "ref": null,
          "rendered": Array [
            "Author One",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="book">
          <div
                    className="book-top">
                    <BookShelfChanger
                              book={
                                        Object {
                                                  "authors": Array [
                                                    "Author One",
                                                  ],
                                                  "id": 1,
                                                  "shelf": "read",
                                                  "title": "Book One",
                                                }
                              }
                              onUpdateBook={[Function]} />
          </div>
          <div
                    className="book-title">
                    Book One
          </div>
          <div
                    className="book-authors">
                    Author One
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-top">
              <BookShelfChanger
                            book={
                                          Object {
                                                        "authors": Array [
                                                          "Author One",
                                                        ],
                                                        "id": 1,
                                                        "shelf": "read",
                                                        "title": "Book One",
                                                      }
                            }
                            onUpdateBook={[Function]} />
</div>,
            <div
              className="book-title">
              Book One
</div>,
            <div
              className="book-authors">
              Author One
</div>,
          ],
          "className": "book",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <BookShelfChanger
                  book={
                                    Object {
                                                      "authors": Array [
                                                        "Author One",
                                                      ],
                                                      "id": 1,
                                                      "shelf": "read",
                                                      "title": "Book One",
                                                    }
                  }
                  onUpdateBook={[Function]} />,
              ],
              "className": "book-top",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "book": Object {
                    "authors": Array [
                      "Author One",
                    ],
                    "id": 1,
                    "shelf": "read",
                    "title": "Book One",
                  },
                  "onUpdateBook": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book One",
              "className": "book-title",
            },
            "ref": null,
            "rendered": "Book One",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Author One",
              ],
              "className": "book-authors",
            },
            "ref": null,
            "rendered": Array [
              "Author One",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Testing Book Component check render when not exists props.book.imageLinks.thumbnail 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Book
    book={
        Object {
            "authors": Array [
              "Author One",
            ],
            "id": 1,
            "imageLinks": Object {},
            "shelf": "read",
            "title": "Book One",
          }
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="book">
        <div
                className="book-top">
                <BookShelfChanger
                        book={
                                Object {
                                        "authors": Array [
                                          "Author One",
                                        ],
                                        "id": 1,
                                        "imageLinks": Object {},
                                        "shelf": "read",
                                        "title": "Book One",
                                      }
                        }
                        onUpdateBook={[Function]} />
        </div>
        <div
                className="book-title">
                Book One
        </div>
        <div
                className="book-authors">
                Author One
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top">
            <BookShelfChanger
                        book={
                                    Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {},
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                        }
                        onUpdateBook={[Function]} />
</div>,
          <div
            className="book-title">
            Book One
</div>,
          <div
            className="book-authors">
            Author One
</div>,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <BookShelfChanger
                book={
                                Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {},
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                }
                onUpdateBook={[Function]} />,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "book": Object {
                  "authors": Array [
                    "Author One",
                  ],
                  "id": 1,
                  "imageLinks": Object {},
                  "shelf": "read",
                  "title": "Book One",
                },
                "onUpdateBook": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book One",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "Book One",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Author One",
            ],
            "className": "book-authors",
          },
          "ref": null,
          "rendered": Array [
            "Author One",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="book">
          <div
                    className="book-top">
                    <BookShelfChanger
                              book={
                                        Object {
                                                  "authors": Array [
                                                    "Author One",
                                                  ],
                                                  "id": 1,
                                                  "imageLinks": Object {},
                                                  "shelf": "read",
                                                  "title": "Book One",
                                                }
                              }
                              onUpdateBook={[Function]} />
          </div>
          <div
                    className="book-title">
                    Book One
          </div>
          <div
                    className="book-authors">
                    Author One
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-top">
              <BookShelfChanger
                            book={
                                          Object {
                                                        "authors": Array [
                                                          "Author One",
                                                        ],
                                                        "id": 1,
                                                        "imageLinks": Object {},
                                                        "shelf": "read",
                                                        "title": "Book One",
                                                      }
                            }
                            onUpdateBook={[Function]} />
</div>,
            <div
              className="book-title">
              Book One
</div>,
            <div
              className="book-authors">
              Author One
</div>,
          ],
          "className": "book",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <BookShelfChanger
                  book={
                                    Object {
                                                      "authors": Array [
                                                        "Author One",
                                                      ],
                                                      "id": 1,
                                                      "imageLinks": Object {},
                                                      "shelf": "read",
                                                      "title": "Book One",
                                                    }
                  }
                  onUpdateBook={[Function]} />,
              ],
              "className": "book-top",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "book": Object {
                    "authors": Array [
                      "Author One",
                    ],
                    "id": 1,
                    "imageLinks": Object {},
                    "shelf": "read",
                    "title": "Book One",
                  },
                  "onUpdateBook": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book One",
              "className": "book-title",
            },
            "ref": null,
            "rendered": "Book One",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Author One",
              ],
              "className": "book-authors",
            },
            "ref": null,
            "rendered": Array [
              "Author One",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Testing Book Component check render when there is only one author in props.book.authors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Book
    book={
        Object {
            "authors": Array [
              "Author One",
              "Author Two",
            ],
            "id": 1,
            "imageLinks": Object {
              "thumbnail": "url/book/one",
            },
            "shelf": "read",
            "title": "Book One",
          }
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="book">
        <div
                className="book-top">
                <div
                        className="book-cover"
                        style={
                                Object {
                                        "backgroundImage": "url(url/book/one)",
                                        "height": 193,
                                        "width": 128,
                                      }
                        } />
                <BookShelfChanger
                        book={
                                Object {
                                        "authors": Array [
                                          "Author One",
                                          "Author Two",
                                        ],
                                        "id": 1,
                                        "imageLinks": Object {
                                          "thumbnail": "url/book/one",
                                        },
                                        "shelf": "read",
                                        "title": "Book One",
                                      }
                        }
                        onUpdateBook={[Function]} />
        </div>
        <div
                className="book-title">
                Book One
        </div>
        <div
                className="book-authors">
                Author One, Author Two
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top">
            <div
                        className="book-cover"
                        style={
                                    Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                        } />
            <BookShelfChanger
                        book={
                                    Object {
                                                "authors": Array [
                                                  "Author One",
                                                  "Author Two",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                        }
                        onUpdateBook={[Function]} />
</div>,
          <div
            className="book-title">
            Book One
</div>,
          <div
            className="book-authors">
            Author One, Author Two
</div>,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="book-cover"
                style={
                                Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                } />,
              <BookShelfChanger
                book={
                                Object {
                                                "authors": Array [
                                                  "Author One",
                                                  "Author Two",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                }
                onUpdateBook={[Function]} />,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "book-cover",
                "style": Object {
                  "backgroundImage": "url(url/book/one)",
                  "height": 193,
                  "width": 128,
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "book": Object {
                  "authors": Array [
                    "Author One",
                    "Author Two",
                  ],
                  "id": 1,
                  "imageLinks": Object {
                    "thumbnail": "url/book/one",
                  },
                  "shelf": "read",
                  "title": "Book One",
                },
                "onUpdateBook": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book One",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "Book One",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Author One, Author Two",
            "className": "book-authors",
          },
          "ref": null,
          "rendered": "Author One, Author Two",
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="book">
          <div
                    className="book-top">
                    <div
                              className="book-cover"
                              style={
                                        Object {
                                                  "backgroundImage": "url(url/book/one)",
                                                  "height": 193,
                                                  "width": 128,
                                                }
                              } />
                    <BookShelfChanger
                              book={
                                        Object {
                                                  "authors": Array [
                                                    "Author One",
                                                    "Author Two",
                                                  ],
                                                  "id": 1,
                                                  "imageLinks": Object {
                                                    "thumbnail": "url/book/one",
                                                  },
                                                  "shelf": "read",
                                                  "title": "Book One",
                                                }
                              }
                              onUpdateBook={[Function]} />
          </div>
          <div
                    className="book-title">
                    Book One
          </div>
          <div
                    className="book-authors">
                    Author One, Author Two
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-top">
              <div
                            className="book-cover"
                            style={
                                          Object {
                                                        "backgroundImage": "url(url/book/one)",
                                                        "height": 193,
                                                        "width": 128,
                                                      }
                            } />
              <BookShelfChanger
                            book={
                                          Object {
                                                        "authors": Array [
                                                          "Author One",
                                                          "Author Two",
                                                        ],
                                                        "id": 1,
                                                        "imageLinks": Object {
                                                          "thumbnail": "url/book/one",
                                                        },
                                                        "shelf": "read",
                                                        "title": "Book One",
                                                      }
                            }
                            onUpdateBook={[Function]} />
</div>,
            <div
              className="book-title">
              Book One
</div>,
            <div
              className="book-authors">
              Author One, Author Two
</div>,
          ],
          "className": "book",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="book-cover"
                  style={
                                    Object {
                                                      "backgroundImage": "url(url/book/one)",
                                                      "height": 193,
                                                      "width": 128,
                                                    }
                  } />,
                <BookShelfChanger
                  book={
                                    Object {
                                                      "authors": Array [
                                                        "Author One",
                                                        "Author Two",
                                                      ],
                                                      "id": 1,
                                                      "imageLinks": Object {
                                                        "thumbnail": "url/book/one",
                                                      },
                                                      "shelf": "read",
                                                      "title": "Book One",
                                                    }
                  }
                  onUpdateBook={[Function]} />,
              ],
              "className": "book-top",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "book-cover",
                  "style": Object {
                    "backgroundImage": "url(url/book/one)",
                    "height": 193,
                    "width": 128,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "book": Object {
                    "authors": Array [
                      "Author One",
                      "Author Two",
                    ],
                    "id": 1,
                    "imageLinks": Object {
                      "thumbnail": "url/book/one",
                    },
                    "shelf": "read",
                    "title": "Book One",
                  },
                  "onUpdateBook": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book One",
              "className": "book-title",
            },
            "ref": null,
            "rendered": "Book One",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Author One, Author Two",
              "className": "book-authors",
            },
            "ref": null,
            "rendered": "Author One, Author Two",
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Testing Book Component render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Book
    book={
        Object {
            "authors": Array [
              "Author One",
            ],
            "id": 1,
            "imageLinks": Object {
              "thumbnail": "url/book/one",
            },
            "shelf": "read",
            "title": "Book One",
          }
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="book">
        <div
                className="book-top">
                <div
                        className="book-cover"
                        style={
                                Object {
                                        "backgroundImage": "url(url/book/one)",
                                        "height": 193,
                                        "width": 128,
                                      }
                        } />
                <BookShelfChanger
                        book={
                                Object {
                                        "authors": Array [
                                          "Author One",
                                        ],
                                        "id": 1,
                                        "imageLinks": Object {
                                          "thumbnail": "url/book/one",
                                        },
                                        "shelf": "read",
                                        "title": "Book One",
                                      }
                        }
                        onUpdateBook={[Function]} />
        </div>
        <div
                className="book-title">
                Book One
        </div>
        <div
                className="book-authors">
                Author One
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top">
            <div
                        className="book-cover"
                        style={
                                    Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                        } />
            <BookShelfChanger
                        book={
                                    Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                        }
                        onUpdateBook={[Function]} />
</div>,
          <div
            className="book-title">
            Book One
</div>,
          <div
            className="book-authors">
            Author One
</div>,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="book-cover"
                style={
                                Object {
                                                "backgroundImage": "url(url/book/one)",
                                                "height": 193,
                                                "width": 128,
                                              }
                } />,
              <BookShelfChanger
                book={
                                Object {
                                                "authors": Array [
                                                  "Author One",
                                                ],
                                                "id": 1,
                                                "imageLinks": Object {
                                                  "thumbnail": "url/book/one",
                                                },
                                                "shelf": "read",
                                                "title": "Book One",
                                              }
                }
                onUpdateBook={[Function]} />,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "book-cover",
                "style": Object {
                  "backgroundImage": "url(url/book/one)",
                  "height": 193,
                  "width": 128,
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "book": Object {
                  "authors": Array [
                    "Author One",
                  ],
                  "id": 1,
                  "imageLinks": Object {
                    "thumbnail": "url/book/one",
                  },
                  "shelf": "read",
                  "title": "Book One",
                },
                "onUpdateBook": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book One",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "Book One",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Author One",
            ],
            "className": "book-authors",
          },
          "ref": null,
          "rendered": Array [
            "Author One",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="book">
          <div
                    className="book-top">
                    <div
                              className="book-cover"
                              style={
                                        Object {
                                                  "backgroundImage": "url(url/book/one)",
                                                  "height": 193,
                                                  "width": 128,
                                                }
                              } />
                    <BookShelfChanger
                              book={
                                        Object {
                                                  "authors": Array [
                                                    "Author One",
                                                  ],
                                                  "id": 1,
                                                  "imageLinks": Object {
                                                    "thumbnail": "url/book/one",
                                                  },
                                                  "shelf": "read",
                                                  "title": "Book One",
                                                }
                              }
                              onUpdateBook={[Function]} />
          </div>
          <div
                    className="book-title">
                    Book One
          </div>
          <div
                    className="book-authors">
                    Author One
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-top">
              <div
                            className="book-cover"
                            style={
                                          Object {
                                                        "backgroundImage": "url(url/book/one)",
                                                        "height": 193,
                                                        "width": 128,
                                                      }
                            } />
              <BookShelfChanger
                            book={
                                          Object {
                                                        "authors": Array [
                                                          "Author One",
                                                        ],
                                                        "id": 1,
                                                        "imageLinks": Object {
                                                          "thumbnail": "url/book/one",
                                                        },
                                                        "shelf": "read",
                                                        "title": "Book One",
                                                      }
                            }
                            onUpdateBook={[Function]} />
</div>,
            <div
              className="book-title">
              Book One
</div>,
            <div
              className="book-authors">
              Author One
</div>,
          ],
          "className": "book",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="book-cover"
                  style={
                                    Object {
                                                      "backgroundImage": "url(url/book/one)",
                                                      "height": 193,
                                                      "width": 128,
                                                    }
                  } />,
                <BookShelfChanger
                  book={
                                    Object {
                                                      "authors": Array [
                                                        "Author One",
                                                      ],
                                                      "id": 1,
                                                      "imageLinks": Object {
                                                        "thumbnail": "url/book/one",
                                                      },
                                                      "shelf": "read",
                                                      "title": "Book One",
                                                    }
                  }
                  onUpdateBook={[Function]} />,
              ],
              "className": "book-top",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "book-cover",
                  "style": Object {
                    "backgroundImage": "url(url/book/one)",
                    "height": 193,
                    "width": 128,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "book": Object {
                    "authors": Array [
                      "Author One",
                    ],
                    "id": 1,
                    "imageLinks": Object {
                      "thumbnail": "url/book/one",
                    },
                    "shelf": "read",
                    "title": "Book One",
                  },
                  "onUpdateBook": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book One",
              "className": "book-title",
            },
            "ref": null,
            "rendered": "Book One",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Author One",
              ],
              "className": "book-authors",
            },
            "ref": null,
            "rendered": Array [
              "Author One",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
