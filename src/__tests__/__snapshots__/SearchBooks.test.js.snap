exports[`Testing SearchBooks Component check render when state changes 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBooks
    books={
        Array [
            Object {
              "authors": Array [
                "Authors One",
              ],
              "id": 1,
              "imageLinks": Object {
                "thumbnail": "url/book/one",
              },
              "shelf": "read",
              "title": "Book One",
            },
            Object {
              "authors": Array [
                "Authors Two",
              ],
              "id": 2,
              "shelf": "wantToRead",
              "title": "Book Two",
            },
            Object {
              "id": 3,
              "imageLinks": Object {
                "thumbnail": "url/book/three",
              },
              "shelf": "currentlyReading",
              "title": "Book Three",
            },
          ]
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="search-books-bar">
          <Link
                    className="close-search"
                    replace={false}
                    to="/" />
          <div
                    className="search-books-input-wrapper">
                    <Debounce
                              handler="onChange"
                              handlers={Array []}
                              time="500">
                              <input
                                        onChange={[Function]}
                                        placeholder="Search by title or author"
                                        type="text" />
                    </Debounce>
          </div>
</div>,
        <div
          className="search-books-results">
          <ol
                    className="books-grid">
                    
          </ol>
</div>,
      ],
      "className": "search-books",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="close-search"
              replace={false}
              to="/" />,
            <div
              className="search-books-input-wrapper">
              <Debounce
                            handler="onChange"
                            handlers={Array []}
                            time="500">
                            <input
                                          onChange={[Function]}
                                          placeholder="Search by title or author"
                                          type="text" />
              </Debounce>
</div>,
          ],
          "className": "search-books-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "close-search",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Debounce
                handler="onChange"
                handlers={Array []}
                time="500">
                <input
                                onChange={[Function]}
                                placeholder="Search by title or author"
                                type="text" />
</Debounce>,
              "className": "search-books-input-wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <input
                  onChange={[Function]}
                  placeholder="Search by title or author"
                  type="text" />,
                "handler": "onChange",
                "handlers": Array [],
                "time": "500",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Search by title or author",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ol
            className="books-grid">
            
</ol>,
          "className": "search-books-results",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "books-grid",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ol",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search-books-bar">
            <Link
                        className="close-search"
                        replace={false}
                        to="/" />
            <div
                        className="search-books-input-wrapper">
                        <Debounce
                                    handler="onChange"
                                    handlers={Array []}
                                    time="500">
                                    <input
                                                onChange={[Function]}
                                                placeholder="Search by title or author"
                                                type="text" />
                        </Debounce>
            </div>
</div>,
          <div
            className="search-books-results">
            <ol
                        className="books-grid">
                        
            </ol>
</div>,
        ],
        "className": "search-books",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="close-search"
                replace={false}
                to="/" />,
              <div
                className="search-books-input-wrapper">
                <Debounce
                                handler="onChange"
                                handlers={Array []}
                                time="500">
                                <input
                                                onChange={[Function]}
                                                placeholder="Search by title or author"
                                                type="text" />
                </Debounce>
</div>,
            ],
            "className": "search-books-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "close-search",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Debounce
                  handler="onChange"
                  handlers={Array []}
                  time="500">
                  <input
                                    onChange={[Function]}
                                    placeholder="Search by title or author"
                                    type="text" />
</Debounce>,
                "className": "search-books-input-wrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <input
                    onChange={[Function]}
                    placeholder="Search by title or author"
                    type="text" />,
                  "handler": "onChange",
                  "handlers": Array [],
                  "time": "500",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Search by title or author",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ol
              className="books-grid">
              
</ol>,
            "className": "search-books-results",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "books-grid",
            },
            "ref": null,
            "rendered": Array [],
            "type": "ol",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Testing SearchBooks Component input changes the text 1`] = `
<div
  className="search-books">
  <div
    className="search-books-bar">
    <Link
      className="close-search"
      replace={false}
      to="/" />
    <div
      className="search-books-input-wrapper">
      <Debounce
        handler="onChange"
        handlers={Array []}
        time="500">
        <input
          onChange={[Function]}
          placeholder="Search by title or author"
          type="text" />
      </Debounce>
    </div>
  </div>
  <div
    className="search-books-results">
    <ol
      className="books-grid" />
  </div>
</div>
`;

exports[`Testing SearchBooks Component render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBooks
    books={
        Array [
            Object {
              "authors": Array [
                "Authors One",
              ],
              "id": 1,
              "imageLinks": Object {
                "thumbnail": "url/book/one",
              },
              "shelf": "read",
              "title": "Book One",
            },
            Object {
              "authors": Array [
                "Authors Two",
              ],
              "id": 2,
              "shelf": "wantToRead",
              "title": "Book Two",
            },
            Object {
              "id": 3,
              "imageLinks": Object {
                "thumbnail": "url/book/three",
              },
              "shelf": "currentlyReading",
              "title": "Book Three",
            },
          ]
    }
    onUpdateBook={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="search-books-bar">
          <Link
                    className="close-search"
                    replace={false}
                    to="/" />
          <div
                    className="search-books-input-wrapper">
                    <Debounce
                              handler="onChange"
                              handlers={Array []}
                              time="500">
                              <input
                                        onChange={[Function]}
                                        placeholder="Search by title or author"
                                        type="text" />
                    </Debounce>
          </div>
</div>,
        <div
          className="search-books-results">
          <ol
                    className="books-grid">
                    
          </ol>
</div>,
      ],
      "className": "search-books",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="close-search"
              replace={false}
              to="/" />,
            <div
              className="search-books-input-wrapper">
              <Debounce
                            handler="onChange"
                            handlers={Array []}
                            time="500">
                            <input
                                          onChange={[Function]}
                                          placeholder="Search by title or author"
                                          type="text" />
              </Debounce>
</div>,
          ],
          "className": "search-books-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "close-search",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Debounce
                handler="onChange"
                handlers={Array []}
                time="500">
                <input
                                onChange={[Function]}
                                placeholder="Search by title or author"
                                type="text" />
</Debounce>,
              "className": "search-books-input-wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <input
                  onChange={[Function]}
                  placeholder="Search by title or author"
                  type="text" />,
                "handler": "onChange",
                "handlers": Array [],
                "time": "500",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Search by title or author",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ol
            className="books-grid">
            
</ol>,
          "className": "search-books-results",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "books-grid",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ol",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search-books-bar">
            <Link
                        className="close-search"
                        replace={false}
                        to="/" />
            <div
                        className="search-books-input-wrapper">
                        <Debounce
                                    handler="onChange"
                                    handlers={Array []}
                                    time="500">
                                    <input
                                                onChange={[Function]}
                                                placeholder="Search by title or author"
                                                type="text" />
                        </Debounce>
            </div>
</div>,
          <div
            className="search-books-results">
            <ol
                        className="books-grid">
                        
            </ol>
</div>,
        ],
        "className": "search-books",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="close-search"
                replace={false}
                to="/" />,
              <div
                className="search-books-input-wrapper">
                <Debounce
                                handler="onChange"
                                handlers={Array []}
                                time="500">
                                <input
                                                onChange={[Function]}
                                                placeholder="Search by title or author"
                                                type="text" />
                </Debounce>
</div>,
            ],
            "className": "search-books-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "close-search",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Debounce
                  handler="onChange"
                  handlers={Array []}
                  time="500">
                  <input
                                    onChange={[Function]}
                                    placeholder="Search by title or author"
                                    type="text" />
</Debounce>,
                "className": "search-books-input-wrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <input
                    onChange={[Function]}
                    placeholder="Search by title or author"
                    type="text" />,
                  "handler": "onChange",
                  "handlers": Array [],
                  "time": "500",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Search by title or author",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ol
              className="books-grid">
              
</ol>,
            "className": "search-books-results",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "books-grid",
            },
            "ref": null,
            "rendered": Array [],
            "type": "ol",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
